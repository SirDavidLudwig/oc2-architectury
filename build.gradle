plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.11.0-SNAPSHOT" apply false
}

def getGitRef() {
    try {
        final def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (final Throwable ignored) {
        return 'unknown'
    }
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()

        testImplementation "org.mockito:mockito-inline:${rootProject.mockito_version}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${rootProject.junit_jupiter_version}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${rootProject.junit_jupiter_version}"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.semver}+${getGitRef()}"
    group = rootProject.maven_group

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://cursemaven.com'
            content { includeGroup 'curse.maven' }
        }
        maven {
            // Location of the maven that hosts REI files
            name 'Shedman maven'
            url 'https://maven.shedaniel.me/'
        }
        maven {
            url 'https://dvs1.progwml6.com/files/maven/'
            content { includeGroup 'mezz.jei' }
        }
        ["fnuecke/SednaMinecraft"].forEach(repo -> {
            maven {
                url = uri("https://maven.pkg.github.com/${repo}")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                    password = project.findProperty("gpr.key") ?: System.getenv("GPR_KEY")
                }
            }
        })
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
